par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
dev.off()
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
twcasests <- twcasests%>%
filter(date > '2022-01-01')
twcases20 <- twcases%>%
filter(date > '2022-01-01')
twcasests20 <- xts(twcases20$cases, twcases20$date)
plot(diff(log(twcasests20)),ylim=c(-5,5))
dev.off()
twcases22 <- twcases%>%
filter(date > '2022-01-01')
twcasests22 <- xts(twcases22$cases, twcases20$date)
plot(diff(log(twcasests22)),ylim=c(-5,5))
plot(twcasests22)
acf(twcasests22,main="ACF of TW Cases",20)
pacf(twcasests22,main="PACF of TW Cases",20)
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
plot(twcasests22)
acf(twcasests22,main="ACF of TW Cases",20)
pacf(twcasests22,main="PACF of TW Cases",20)
rm(list=ls())
d1 <- diff(twcasests,1)
# clear memory
rm(list=ls())
# Get the package to access the data
# install.packages("coronavirus")
# Load
library(coronavirus)
data("coronavirus")
require(dplyr)
library(tidyverse) # Optional but strongly recommended
library(covdata)
library(xts)
covnat_weekly
covus
colnames(coronavirus)
twcases <- coronavirus%>%
filter(type == "confirmed") %>%
filter(country == "Taiwan*")
twcasests <- xts(twcases$cases, twcases$date)
plot(diff(log(twcasests)),ylim=c(-5,5))
# twdeath <- coronavirus%>%
#   filter(type == "death") %>%
#   filter(country == "Taiwan*")%>%
#   filter(date > '2022-01-01')
#
# twdeathts <- xts(twdeath$cases, twdeath$date)
#
# plot(tail(100*diff(log(twdeathts)), 80), ylim=c(-100,100))
#
# plot(twdeathts)
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
# Take first difference
d1 <- diff(twcasests,1)
plot(d1)
acf(d1,main="ACF of TW Cases with 1st dif",20)
acf(as.ts(d1),main="ACF of TW Cases with 1st dif",20)
acf(diff(twcasests,1),main="ACF of TW Cases with 1st dif",20)
dev.off()
plot(d1)
d1 <- diff(twcasests,1)%>%
as.ts()
plot(d1)
acf(d1,main="ACF of TW Cases with 1st dif",20)
d1 <- diff(twcasests,1)
plot(d1)
acf(diff(twcasests,1),main="ACF of TW Cases with 1st dif")
acf(as.ts(diff(twcasests,1)),main="ACF of TW Cases with 1st dif")
View(twcasests)
View(twcasests)
acf(diff(twcasests),main="ACF of TW Cases with 1st dif")
acf(diff(twcasests),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests),main="PACF of TW Cases with 1st dif",na.action = na.pass)
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
fit <- arima(twcasests, order=c(5,0,0))
tsdiag(fit, gof.lag=18)
# parsimonious
fit.ar5 <- arima(twcasests, order=c(5,0,0))
tsdiag(fit.ar5, gof.lag=18)
# Fit an ARIMA(5,0,1)
fit.arma51 <- arima(twcasests, order=c(5,0,1))
dev.off()
fit.arma51 <- arima(twcasests, order=c(5,0,1))
d12 <- diff(twcasests, lag = 12)
plot(d12)
par(mfrow=c(1,2))
acf(diff(twcasests,lag = 12),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests,lag = 12),main="PACF of TW Cases with 1st dif",na.action = na.pass)
par(mfrow=c(1,2))
acf(diff(twcasests,12),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests,12),main="PACF of TW Cases with 1st dif",na.action = na.pass)
plot(ltwcases)
ltwcases <- log(twcasests)
plot(ltwcases)
plot(ltwcases, ylim=c(-5,5))
plot(ltwcases, ylim=c(0,10))
par(mfrow=c(1,2))
acf(log(twcasests),main="ACF of TW Cases with 1st dif", na.action = na.pass)
ltwcases <- log1p(twcasests)
plot(ltwcases, ylim=c(0,10))
par(mfrow=c(1,2))
plot(ltwcases, ylim=c(0,15))
acf(log1p(twcasests),main="ACF of TW Cases with 1st dif", na.action = na.pass)
# Fit an ARIMA(5,0,0)
fit.ar5 <- arima(twcasests, order=c(5,0,0))
tsdiag(fit.ar5, gof.lag=18)
plot(twcasests)
dev.off()
plot(twcasests)
plot(diff(log(twcasests)),ylim=c(-5,5))
acf(log(diff(twcasests)),main="ACF of TW Cases with 1st dif", na.action = na.pass)
# clear memory
rm(list=ls())
# Number of observations
N <- 500
# Simulation
x <- arima.sim(list(ar=0.9), n=N) #AR1?
x1 <- arima.sim(list(ar=c(0.9, -0.5)), n=N) #AR2?
plot(x)
acf(x)
pacf(x)
Durbin-Levinson algorithm
# Durbin-Levinson algorithm
DLalgo <- function(x)
{
T <- length(x)
# MSE matrix
P <- matrix(0,T,1)
# Phi matrix
phi <- matrix(0,T,1)
# Get the rhos from PACF!
rhos <- pacf(x, lag.max=length(x), plot=FALSE)$acf
# Intialize for an AR(1)
phi[1,1] <- rhos[1,1,1]
P[1,1] <- var(x)/(1-phi[1,1]^2)
# Now loop over the computation
for(i in 2:(length(x)-1))
{
phi[i,1] <- (rhos[i,1,1] -
sum(phi[(T-i-1)]*rhos[T-i,1,1])) / (1-sum(phi[T-i-1]*rhos[-i,1,1]))
P[i,1] <- P[i-1,1]*(1 - phi[i,1]^2)
if(i%%100==0) {cat(i, "and phi = ",phi[i,1], "\n")}
}
return(list(phi=phi,P=P))
}
# print out the results
out <- DLalgo(x)
out1 <- DLalgo(x1)
print(out$phi[1:10])
print(out$P[1:10,1])
phi2 <- out1$phi[2,1]
phi1 <- out1$phi[1,1]*(1-phi2)
print(phi1)
print(phi2)
arima(x, order=c(1,0,0))
sarima.for(twcasests,p=5,d=0,q=0,n.ahead=12)
?sarima.for
library(astsa)
sarima.for(twcasests,p=5,d=0,q=0,n.ahead=12)
# Get the package to access the data
# install.packages("coronavirus")
# Load
library(coronavirus)
data("coronavirus")
require(dplyr)
library(tidyverse) # Optional but strongly recommended
library(covdata)
library(xts)
covnat_weekly
covus
colnames(coronavirus)
twcases <- coronavirus%>%
filter(type == "confirmed") %>%
filter(country == "Taiwan*")
twcasests <- xts(twcases$cases, twcases$date)
plot(diff(log(twcasests)),ylim=c(-5,5))
# twdeath <- coronavirus%>%
#   filter(type == "death") %>%
#   filter(country == "Taiwan*")%>%
#   filter(date > '2022-01-01')
#
# twdeathts <- xts(twdeath$cases, twdeath$date)
#
# plot(tail(100*diff(log(twdeathts)), 80), ylim=c(-100,100))
#
# plot(twdeathts)
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
# Take first difference
d1 <- diff(twcasests,1)
plot(d1)
acf(diff(twcasests),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests),main="PACF of TW Cases with 1st dif",na.action = na.pass)
dev.off()
### First PACF -0.5. We are not supposed to difference.
# Maybe seasonal?
d12 <- diff(twcasests, lag = 12)
plot(d12)
par(mfrow=c(1,2))
acf(diff(twcasests,12),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests,12),main="PACF of TW Cases with 1st dif",na.action = na.pass)
dev.off()
### Created large spike in PACF at 12th lag. We should not do this.
# Fit an ARIMA(5,0,0)
fit.ar5 <- arima(twcasests, order=c(5,0,0))
tsdiag(fit.ar5, gof.lag=18)
sarima.for(twcasests,p=5,d=0,q=0,n.ahead=12)
par(mfrow=c(1,3))
plot(twcasests)
acf(twcasests,main="ACF of TW Cases",20)
pacf(twcasests,main="PACF of TW Cases",20)
par(mfrow=c(1,3))
plot(d1)
acf(diff(twcasests),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests),main="PACF of TW Cases with 1st dif",na.action = na.pass)
par(mfrow=c(1,3))
plot(d12)
acf(diff(twcasests,12),main="ACF of TW Cases with 1st dif", na.action = na.pass)
pacf(diff(twcasests,12),main="PACF of TW Cases with 1st dif",na.action = na.pass)
dev.off()
fit.ar5 <- arima(twcasests, order=c(5,0,0))
tsdiag(fit.ar5, gof.lag=18)
sarima.for(twcasests,p=5,d=0,q=0,n.ahead=12)
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 2")
# csv
library(readr)
library(tidyverse)
HPI <- read_csv("Book1.csv")
HPI <- as.data.frame(HPI)
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI$cont <- factor(cont)
library(readr)
library(tidyverse)
HPI <- read_csv("Book1.csv")
HPI <- as.data.frame(HPI)
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI$cont <- factor(cont)
HPI$cont <- factor(HPI$cont)
HPI_US <- as.data.frame(HPI)
HPI_US <- HPI_US%>%
filter(HPI_US$ISO=='USA')
HPI_KO <- as.data.frame(HPI)
HPI_KO <- HPI_KO%>%
filter(HPI_KO$ISO=='KOR')
library(forecast)
HPI_US_ts <- ts(HPI_US$HPI, frequency = 1, start = 2015)
HPI_KO_ts <- ts(HPI_KO$HPI, frequency = 1, start = 2015)
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(37, 39, 0.5)) # Position, right
mtext("Time (years)", side=1, line=2.5, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=3, las=0, cex=0.8)
#####
# Histogram
HPI_19 <- as.data.frame(HPI)
HPI_19 <- HPI_19%>%
filter(year==2019)
par(las=1, mar=c(5, 2, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ", yaxt='n')
axis(4, at=seq(0, 40, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=4, line=3, las=0, cex=0.8)
# Boxplot
HPI_19s <- HPI_19%>%
filter()%>%
select(cont, GDP, HPI)%>%
group_by(cont)
par(mar=c(3, 4.1, 2, 0))
plot.new()
boxplot(GDP ~ HPI, data = HPI_19,
subset= supp == "VC", col="white",
xlab="",
ylab="tooth length", ylim=c(0,35))
boxplot(GDP ~ HPI, data = HPI_19,
subset= supp == "VC", col="white",
xlab="",
ylab="")
boxplot(GDP ~ HPI, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
HPI_19s <- HPI_19%>%
filter()%>%
select(cont, GDP, HPI)
par(mar=c(3, 4.1, 2, 0))
plot.new()
boxplot(GDP ~ HPI, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
boxplot(HPI ~ GDP, data = HPI_19, boxwex = 0.25,
subset=cont, col="white",
xlab="",
ylab="")
mtext("Vitamin C dose (mg)", side=1, line=2.5, cex=0.8)
par(las=1, mar=c(5, 2, 2, 5), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(5, 2, 2, 7), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(5, 2, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(7, 2, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(5, 2, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(2, 5, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(2, 3, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
par(las=1, mar=c(3, 3, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
mtext("Vitamin C dose (mg)", side=1, line=2.5, cex=0.8)
par(las=1, mar=c(5, 3, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
mtext("Vitamin C dose (mg)", side=1, line=1, cex=0.8)
mtext("Vitamin C dose (mg)", side=1, line=3, cex=0.8)
mtext("GPD grouped by continent", side=1, line=2.5, cex=0.8)
par(las=1, mar=c(5, 5, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
mtext("GPD grouped by continent", side=1, line=2.5, cex=0.8)
mtext("Happy Planet Index", side=2, line=2.5, cex=0.8)
mtext("Happy Planet Index", side=2, line=2.5,las=0, cex=0.8)
par(las=1, mar=c(5, 5, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
mtext("GPD grouped by continent", side=1, line=2.5, cex=0.8)
mtext("Happy Planet Index", side=2, line=2.5,las=0, cex=0.8)
View(coronavirus)
par(las=1, mar=c(5, 5, 2, 3), cex=.7)
plot.new()
boxplot(HPI ~ GDP, data = HPI_19,
subset=cont, col="white",
xlab="",
ylab="")
mtext("GPD per capita grouped by continent", side=1, line=2.5, cex=0.8)
mtext("Happy Planet Index", side=2, line=2.5,las=0, cex=0.8)
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$HPI, subset=cont, col = gray(seq(0.3,1.0,length=6)))
HPI_19s$HPI.col <- HPI_19s$HPI
HPI_19s$HPI.col[HPI_19s$HPI.col > 75] <- 1
HPI_19s$HPI.col[HPI_19s$HPI.col > 65 & HPI_19s$HPI.col <= 75] <- 2
HPI_19s$HPI.col[HPI_19s$HPI.col <= 65] <- 3
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$HPI.col, col = gray(seq(0.3,1.0,length=6)))
HPI_19s$HPI.col <- HPI_19s$HPI.col%>%
group_by(HPI.col)
HPI_19s$HPI.col <- HPI_19s$HPI.col%>%
factor(HPI.col)%>%
group_by(HPI.col)
HPI_19s$HPI.col <- HPI_19s$HPI.col%>%
factor(HPI_19s$HPI.col)%>%
group_by(HPI.col)
View(HPI_19s)
View(HPI_19s)
HPI_19s$HPI.col <- HPI_19s$HPI
HPI_19s$HPI.col[HPI_19s$HPI.col > 75] <- 1
HPI_19s$HPI.col[HPI_19s$HPI.col > 65 & HPI_19s$HPI.col <= 75] <- 2
HPI_19s$HPI.col[HPI_19s$HPI.col <= 65] <- 3
HPI_19s <- HPI_19%>%
filter()%>%
select(cont, GDP, HPI, LiExp)
HPI_19s$LiExp.col <- HPI_19s$LiExp
HPI_19s$LiExp.col[HPI_19s$LiExp.col > 75] <- 1
HPI_19s$LiExp.col[HPI_19s$LiExp.col > 65 & HPI_19s$LiExp.col <= 75] <- 2
HPI_19s$LiExp.col[HPI_19s$LiExp.col <= 65] <- 3
HPI_19s$LiExp.col <- HPI_19s$LiExp.col%>%
factor(HPI_19s$LiExp.col)%>%
group_by(LiExp.col)
View(HPI_19s)
View(HPI_19s)
HPI_19s$LiExp.col <- HPI_19s$LiExp
HPI_19s$LiExp.col[HPI_19s$LiExp.col <= 65] <- 3
HPI_19s$LiExp.col[HPI_19s$LiExp.col > 65 & HPI_19s$LiExp.col <= 75] <- 2
HPI_19s$LiExp.col[HPI_19s$LiExp.col > 75] <- 1
View(HPI_19s)
View(HPI_19s)
HPI_19s$LiExp.col <- HPI_19s$LiExp.col%>%
factor(HPI_19s$LiExp.col)%>%
group_by(LiExp.col)
HPI_19s$LiExp.col <- HPI_19s$LiExp.col%>%
factor(HPI_19s$LiExp.col)
HPI_19s$LiExp.col <- HPI_19s$LiExp.col%>%
group_by(LiExp.col)
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=6)))
HPI_19s$LiExp.col <- HPI_19s$LiExp.col%>%
arrange(LiExp.col)
HPI_19s <- HPI_19s%>%
arrange(LiExp.col)
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=6)))
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
HPI_19s <- HPI_19s%>%
arrange(LiExp.col)%>%
count(LiExp.col)
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
?legend
HPI_19s$LiExp.col[HPI_19s$LiExp.col = 3] <- "Good Life Expectancy"
HPI_19s$LiExp.col[HPI_19s$LiExp.col == 3] <- "Good Life Expectancy"
HPI_19s$LiExp.col[HPI_19s$LiExp.col == 3] <- "Poor Life Expectancy"
HPI_19s$LiExp.col[HPI_19s$LiExp.col == 2] <- "Average Life Expectancy"
HPI_19s$LiExp.col[HPI_19s$LiExp.col == 1] <- "Good Life Expectancy"
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, col = gray(seq(0.3,1.0,length=3)))
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=2.5, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=2.5, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=1, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=0.1, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=0.001, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=-5, cex=0.8)
par(mar=c(2, 2, 1, 2), xpd=FALSE, cex=0.5)
pie(HPI_19s$n, HPI_19s$LiExp.col, col = gray(seq(0.3,1.0,length=3)))
mtext("Life Expectancy in 2019", side=1, line=-3, cex=0.8)
?pie
