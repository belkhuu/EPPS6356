rm(list=ls())
# csv
library(readr)
HPI <- read_csv("Book1.csv")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 2")
# csv
library(readr)
HPI <- read_csv("Book1.csv")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 2")
setwd("C:/Users/belkh/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/Quarto/belkhuu.github.io/posts/Assignment - 2")
library(readr)
HPI <- read_csv("Book1.csv")
colnames(HPI)
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
# Create timeseries
library(forecast)
HPI_ts <- ts(HPI$HPI,
frequency = 1,
start = 2015) #start date on dataset
library(forecast)
HPI_US_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filter(country=='United States of America')
library(forecast)
HPI_US_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filter(HPI$country=='United States of America')
drop HPI_US_ts
HPI_US <- HPI%>%
filter(HPI$country=='United States of America')
head(HPI_US)
# csv
library(readr)
HPI <- read_csv("Book1.csv")
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_US <- HPI%>%
filter(HPI$country=='United States of America')
head(HPI_US)
rm(list=ls())
# csv
library(readr)
HPI <- read_csv("Book1.csv")
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_US <- HPI%>%
filter(HPI$country=='United States of America')
head(HPI_US)
dev.off()
library(forecast)
HPI_US <- HPI$HPI%>%
filer(country=='United States of America')
library(forecast)
HPI_US <- HPI$HPI%>%
filter(country=='United States of America')
HPI_US <- HPI$HPI%>%
filter(HPI$country=='United States of America')
library(readr)
Book1 <- read_csv("Book1.csv", col_types = cols(year = col_number()))
View(Book1)
HPI_US <- Book1$HPI%>%
filter(Book1$country=='United States of America')
HPI_US <- Book1$HPI%>%
filter(Book1$Country=='United States of America')
HPI_US <- data.frame(Book1$HPI)
HPI_US <- data.frame(Book1)
HPI_US <- HPI_US%>%
filter(Country='United States of America')
HPI_US <- HPI_US%>%
filter(Country="United States of America")
HPI_US <- HPI_US%>%
filter(HPI_US$ISO='USA')
HPI_US <- HPI_US%>%
filter(HPI_US$ISO=='USA')
# csv
library(readr)
HPI <- read_csv("Book1.csv")
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_US <- HPI%>%
filter(HPI_US$ISO=='USA')
# csv
library(readr)
HPI <- read_csv("Book1.csv")
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_US <- HPI%>%
filter(HPI$ISO=='USA')
library(readr)
HPI <- read_csv("Book1.csv")
# see column names
colnames(HPI)
# rename columns
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_US <- HPI%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)%>%
filter(HPI$ISO=='USA')
library(tidyverse)
HPI_US <- as.data.frame(HPI)%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)
HPI_US <- HPI_US%>%
filter(HPI_US$ISO=='USA')
HPI_US <- as.data.frame(HPI)%>%
filter(HPI_US$ISO=='USA')
library(forecast)
HPI_US_ts <- ts(HPI_US$HPI, frequency = 1, start = 2015) #start date on dataset
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filer(HPI$ISO=='KOR')
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filter(HPI$ISO=='KOR')
HPI <- as.data.frame(HPI)
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filter(HPI$ISO=='KOR')%>%
as.dataframe
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)%>%
filter(HPI$ISO=='KOR')
HPI_US <- HPI%>%
filter(HPI$ISO=='USA')
HPI <- read_csv("Book1.csv")
HPI <- as.data.frame(HPI)
HPI_US <- HPI%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)
HPI_US <- HPI_US
filter(HPI$ISO=='USA')
HPI_US <- HPI_US%>%
filter(HPI$ISO=='USA')
HPI_US <- as.data.frame(HPI)
HPI_US <- HPI_US%>%
filter(HPI$ISO=='USA')
HPI_US <- HPI_US%>%
filter(HPI_US$ISO=='USA')
HII_KO <- as.data.frame(HPI)
HPI_KO <- HPI%>%
filter(HPI_KO$ISO=='USA')
library(forecast)
HPI_US_ts <- ts(HPI_US$HPI, frequency = 1, start = 2015)
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)
x <- c(0.5, 2, 4, 8, 12, 16)
y1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)
y2 <- c(4, .8, .5, .45, .4, .3)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=2)
points(x, y2, pch=21, bg="white", cex=2)
points(x, y2, pch=21, bg="white", cex=10)
points(x, y2, pch=21, bg="pink", cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(0, 16, 4))
axis(2, at=seq(0, 6, 2))
axis(4, at=seq(0, 6, 2))
box(bty="u")
mtext("Travel Time (s)", side=1, line=2, cex=0.8)
mtext("Responses per Travel", side=2, line=2, las=0, cex=0.8)
mtext("Responses per Second", side=4, line=2, las=0, cex=0.8)
text(4, 5, "Bird 131")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")
HII_KO <- as.data.frame(HPI)
HPI_KO <- HPI%>%
filter(HPI_KO$ISO=='KOR')
HII_KO <- as.data.frame(HPI)
HPI_KO <- HPI_KO%>%
filter(HPI_KO$ISO=='KOR')
HPI_KO <- as.data.frame(HPI)
HPI_KO <- HPI_KO%>%
filter(HPI_KO$ISO=='KOR')
HPI_KO_ts <- ts(HPI$HPI, frequency = 1, start = 2015)
HPI_KO_ts <- ts(HPI_KO$HPI, frequency = 1, start = 2015)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(x), c(0, 6))
lines(HPI_US_ts)
lines(HPI_US$year, HPI_US_ts)
plot.window(range(x), range(y))
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
lines(HPI_US$year, HPI_US_ts)
lines(HPI_KO$year, HPI_KO_ts)
lines(HPI_KO$year, HPI_KO_ts)
lines(HPI$year, HPI_US_ts)
plot.window(range(HPI$year), range(HPI_US_ts))
lines(HPI$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(20, 50, 5)) # Position, right
HPI_US_ts
axis(4, at=seq(30, 40, 2)) # Position, right
axis(4, at=seq(35, 40, 2))
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(30, 40, 2))
axis(4, at=seq(30, 40, 1))
axis(4, at=seq(35, 40, 1)) # Position, right
axis(4, at=seq(37, 39, 0.5)) # Position, right
mtext("Time (years)", side=1, line=2, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=2, las=0, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=1, las=0, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=3, las=0, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=2.5, las=0, cex=0.8)
par(las=1, mar=c(4, 4, 2, 4), cex=.7)
plot.new()
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(37, 39, 0.5)) # Position, right
mtext("Time (years)", side=1, line=2, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=2.5, las=0, cex=0.8)
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(37, 39, 0.5)) # Position, right
mtext("Time (years)", side=1, line=2, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=3, las=0, cex=0.8)
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
plot.window(range(HPI_US$year), range(HPI_US_ts))
lines(HPI_US$year, HPI_US_ts)
points(HPI_US$year, HPI_US_ts, pch=16, cex=2)
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(2015, 2019, 1)) # Position, bottom
axis(4, at=seq(37, 39, 0.5)) # Position, right
mtext("Time (years)", side=1, line=2.5, cex=0.8)
mtext("Happy Planet Index (out of 100)", side=4, line=3, las=0, cex=0.8)
text(4, 5, "Bird 131") #Label for point
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")
names(HPI)<-c("country", "ISO", "year", "cont", "Pop", "LiExp",
"wellbeing", "EcoFP", "HPI", "BioCap", "GDP")
HPI_19 <- as.data.frame(HPI)
HPI_19 <- HPI_19%>%
filter(year==2019)
par(mar=c(4.5, 4.1, 3.1, 0))
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, ylim=c(0, 100),
col="gray80", freq=FALSE)
HPI_19$LiExp
hist(HPI_19$LiExp, ylim=c(0, 100),
col="gray80", freq=TRUE)
title('Histogram of Life Expectancy in 2019 among the observed countries')
hist(HPI_19$LiExp, ylim=c(0, 100),
col="gray80", freq=TRUE, main=" ", xlab =" ", ylab = " ")
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=4, line=3, las=0, cex=0.8)
axis(4, at=seq(0, 50, 10)) # Position, right
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ")
axis(4, at=seq(0, 50, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=2, line=3, las=0, cex=0.8)
axis(2, labels=FALSE)
?axos
?axis
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ", yaxt='n')
axis(4, at=seq(0, 40, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=2, line=3, las=0, cex=0.8)
par(las=1, mar=c(5, 5, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ", yaxt='n')
axis(4, at=seq(0, 40, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=4, line=3, las=0, cex=0.8)
?margin
par(las=1, mar=c(5, 5, 2, 3), cex=.7)
par(lmar=c(5, 5, 2, 3))
par(mar=c(5, 5, 2, 3))
par(las=1, mar=c(5, 5, 2, 3), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ", yaxt='n')
axis(4, at=seq(0, 40, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=4, line=3, las=0, cex=0.8)
par(las=1, mar=c(5, 2, 2, 5), cex=.7)
plot.new()
hist(HPI_19$LiExp, col="gray80", freq=TRUE,
main=" ", xlab =" ", ylab = " ", yaxt='n')
axis(4, at=seq(0, 40, 10)) # Position, right
mtext("Life Expectancy (years)", side=1, line=2.5, cex=0.8)
mtext("Distribution", side=4, line=3, las=0, cex=0.8)
par(mar=c(2, 3.1, 2, 2.1))
midpts <- barplot(HPI_19,
col=gray(0.1 + seq(1, 9, 2)/11),
names=rep("", 4))
HPI_19s <- HPI_19%>%
select(cont, wellbeing, HPI)
?barplot
barplot(HPI_19s,
main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = rownames(HPI_19s),
beside = FALSE) # Stacked bars (default)
par(mar=c(2, 3.1, 2, 2.1))
barplot(HPI_19s,
main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = rownames(HPI_19s),
beside = FALSE) # Stacked bars (default)
HPI_19s <- HPI_19%>%
select(cont, wellbeing, HPI)
par(mar=c(2, 3.1, 2, 2.1))
barplot(HPI_19s,
main = "Stacked barchart",
xlab = "Transmission type", ylab = "Frequency",
col = c("darkgrey", "darkblue", "red"),
legend.text = rownames(HPI_19s),
beside = FALSE) # Stacked bars (default)
barplot(cont~ wellbeing + HPI, HPI_19s)
